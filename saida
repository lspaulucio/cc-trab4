TRACE: func_list
TRACE: func_decl
TRACE: func_header
TRACE: param_list
TRACE: func_body
TRACE: var_list
TRACE: num
TRACE: block
TRACE: assign
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: input
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: input
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: input
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: input
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: input
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: input
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: input
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: input
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: input
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: input
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: num
TRACE: num
TRACE: svar
TRACE: func_decl
TRACE: func_header
TRACE: param_list
TRACE: func_body
TRACE: var_list
TRACE: block
TRACE: assign
TRACE: svar
TRACE: lt
TRACE: svar
TRACE: minus
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: func_decl
TRACE: func_header
TRACE: param_list
TRACE: func_body
TRACE: var_list
TRACE: block
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: block
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: minus
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: func_decl
TRACE: func_header
TRACE: param_list
TRACE: func_body
TRACE: var_list
TRACE: block
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: block
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: minus
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: func_decl
TRACE: func_header
TRACE: param_list
TRACE: func_body
TRACE: var_list
TRACE: block
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: minus
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: func_decl
TRACE: func_header
TRACE: param_list
TRACE: func_body
TRACE: var_list
TRACE: block
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: minus
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: func_decl
TRACE: func_header
TRACE: param_list
TRACE: func_body
TRACE: var_list
TRACE: block
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: block
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: block
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: minus
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: func_decl
TRACE: func_header
TRACE: param_list
TRACE: func_body
TRACE: var_list
TRACE: block
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: block
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: minus
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: func_decl
TRACE: func_header
TRACE: param_list
TRACE: func_body
TRACE: var_list
TRACE: block
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: block
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: minus
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: func_decl
TRACE: func_header
TRACE: param_list
TRACE: func_body
TRACE: var_list
TRACE: block
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: minus
TRACE: svar
TRACE: num
TRACE: block
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: func_decl
TRACE: func_header
TRACE: param_list
TRACE: func_body
TRACE: var_list
TRACE: block
TRACE: assign
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: block
TRACE: if
TRACE: lt
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: assign
TRACE: cvar
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: svar
TRACE: svar
TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: minus
TRACE: svar
TRACE: num
TRACE: assign
TRACE: num
TRACE: write
TRACE: string
Sorted array: TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: output
TRACE: cvar
TRACE: svar
9TRACE: write
TRACE: string
 TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: output
TRACE: cvar
TRACE: svar
8TRACE: write
TRACE: string
 TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: output
TRACE: cvar
TRACE: svar
10TRACE: write
TRACE: string
 TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: output
TRACE: cvar
TRACE: svar
7TRACE: write
TRACE: string
 TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: output
TRACE: cvar
TRACE: svar
4TRACE: write
TRACE: string
 TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: output
TRACE: cvar
TRACE: svar
3TRACE: write
TRACE: string
 TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: output
TRACE: cvar
TRACE: svar
5TRACE: write
TRACE: string
 TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: output
TRACE: cvar
TRACE: svar
6TRACE: write
TRACE: string
 TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: output
TRACE: cvar
TRACE: svar
2TRACE: write
TRACE: string
 TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: block
TRACE: output
TRACE: cvar
TRACE: svar
1TRACE: write
TRACE: string
 TRACE: assign
TRACE: plus
TRACE: svar
TRACE: num
TRACE: lt
TRACE: svar
TRACE: num
TRACE: write
TRACE: string

